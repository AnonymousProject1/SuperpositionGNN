import numpy as np
import pprint

# ---- Hidden embeddings dictionary ----
embeddings_dict = {
    "(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)": [0.3397658169269562, -1.665025234222412, 0.07867002487182617, -1.1646645069122314, -0.042871538549661636, 0.2625123858451843],
    "(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)": [0.3329881429672241, -1.6625232696533203, 0.07811656594276428, -1.1762624979019165, -0.04486081376671791, 0.2654816210269928],
    "(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)": [0.7372947335243225, -2.8609511852264404, -0.36541321873664856, 1.0008246898651123, -0.19574734568595886, -0.9817691445350647],
    "(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0)": [0.3367801010608673, -1.6665096282958984, 0.07776553928852081, -1.1654105186462402, -0.04420493543148041, 0.261829137802124],
    "(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0)": [0.3401767313480377, -1.6607774496078491, 0.08096882700920105, -1.169824481010437, -0.04151293635368347, 0.2671554982662201],
    "(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0)": [1.3230758905410767, -1.1823277473449707, 0.6707711219787598, -0.5049635171890259, 0.5145212411880493, 0.854983389377594],
    "(0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0)": [-1.0160995721817017, -2.1059794425964355, 0.3770362138748169, -1.0104326009750366, -0.3451384902000427, 0.9491154551506042],
    "(0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0)": [-0.4311339557170868, -2.858104944229126, 0.7863106727600098, 1.5751450061798096, -0.06710059940814972, 0.907322347164154],
    "(0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0)": [1.5994336605072021, -1.3231571912765503, -0.512729823589325, -1.598663568496704, 0.10619142651557922, -0.8011593818664551],
    "(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0)": [0.33781495690345764, -1.6616660356521606, 0.0799545869231224, -1.1714040040969849, -0.042667191475629807, 0.2663673162460327],
    "(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0)": [-0.5342066884040833, -2.1809566020965576, -0.9275444149971008, -2.2289867401123047, -0.738322377204895, -0.9070014953613281],
    "(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1)": [0.6079779863357544, -1.5517221689224243, 0.192094087600708, -1.012954831123352, 0.0884152203798294, 0.3553824722766876]
}

embed_array = np.array(list(embeddings_dict.values()))  # shape (12, 6)

# ---- Linear out weights ----
linear_out_weights = np.array([
    [-0.2465571016073227,   0.5994475483894348,   0.04661682993173599,  0.011839952319860458,  0.059587832540273666,  0.06370846182107925],
    [-0.08680025488138199,  0.486629843711853,   -0.11787154525518417,  0.0013922834768891335, -0.1276371330022812,  -0.0865127369761467],
    [0.20050548017024994,   1.7425589561462402,  -4.139285564422607,    6.94673490524292,    -1.0908581018447876, -7.51458740234375],
    [-0.06948519498109818,  0.42342111468315125,  0.11279633641242981, -0.0710335299372673,   0.016124745830893517,  0.16349880397319794],
    [-0.13715511560440063,  0.6390833854675293,  -0.0007002164493314922,0.010194918140769005,  0.07836107164621353, -0.0029042474925518036],
    [4.1741766929626465,    2.3363983631134033,   2.71833872795105,     1.1623356342315674,   1.2462633848190308,  2.7352166175842285],
    [-4.6712327003479,      1.1547960042953491,   1.3419657945632935,   -1.3038339614868164,   0.30179139971733093,  2.4623167514801025],
    [-1.9768542051315308,   0.9192352294921875,   1.459531307220459,     3.5107648372650146,   0.19633372128009796,  1.6919821500778198],
    [3.8553130626678467,    2.254117488861084,   -1.3488962650299072,  -0.7639740705490112,   0.06890805065631866, -2.6049387454986572],
    [-0.08381001651287079,  0.44877874851226807, -0.08704596012830734, -0.006385786458849907,-0.006643704138696194,-0.08321743458509445],
    [-4.268483638763428,    0.5605261325836182,  -3.0394718647003174,  -1.272706151008606,   -1.3669687509536743, -3.773068428039551],
    [0.2685364782810211,    0.719886839389801,    0.20413994789123535,  0.08462861180305481,  0.21527275443077087,   0.1893378347158432]
])

# 1) Dot products
all_dot_products = embed_array.dot(linear_out_weights.T)

# 2) Active embeddings (any positive dot product)
active_mask = np.any(all_dot_products > 0, axis=1)
active_indices = np.where(active_mask)[0]

# Filter arrays
active_embeddings = embed_array[active_indices]
active_weights    = linear_out_weights[active_indices]

# Helper: normalize each row
def normalize_rows(mat):
    norms = np.linalg.norm(mat, axis=1, keepdims=True)
    return mat / norms

# 3) Normalization and separation vectors
norm_emb = normalize_rows(active_embeddings)
norm_w   = normalize_rows(active_weights)
separation_vecs = norm_w - norm_emb
std = separation_vecs.std(axis=0)
avg_separation = separation_vecs.mean(axis=0)

# Output
print("Active indices:", active_indices.tolist())
print("\nSeparation vectors:")
pprint.pprint(separation_vecs.tolist())
print("\nAverage separation vector:")
pprint.pprint(avg_separation.tolist())
print("\nStandard deviation of elements in separation vector:")
pprint.pprint(std.tolist())
